/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.4.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DailyForecast
 */
export interface DailyForecast {
    /**
     * 
     * @type {Date}
     * @memberof DailyForecast
     */
    date: Date;
    /**
     * 
     * @type {number}
     * @memberof DailyForecast
     */
    projectedRevenue: number;
    /**
     * 
     * @type {number}
     * @memberof DailyForecast
     */
    projectedExpenses: number;
    /**
     * 
     * @type {number}
     * @memberof DailyForecast
     */
    projectedBalance: number;
}

/**
 * Check if a given object implements the DailyForecast interface.
 */
export function instanceOfDailyForecast(value: object): value is DailyForecast {
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('projectedRevenue' in value) || value['projectedRevenue'] === undefined) return false;
    if (!('projectedExpenses' in value) || value['projectedExpenses'] === undefined) return false;
    if (!('projectedBalance' in value) || value['projectedBalance'] === undefined) return false;
    return true;
}

export function DailyForecastFromJSON(json: any): DailyForecast {
    return DailyForecastFromJSONTyped(json, false);
}

export function DailyForecastFromJSONTyped(json: any, ignoreDiscriminator: boolean): DailyForecast {
    if (json == null) {
        return json;
    }
    return {
        
        'date': (new Date(json['date'])),
        'projectedRevenue': json['projected_revenue'],
        'projectedExpenses': json['projected_expenses'],
        'projectedBalance': json['projected_balance'],
    };
}

export function DailyForecastToJSON(json: any): DailyForecast {
    return DailyForecastToJSONTyped(json, false);
}

export function DailyForecastToJSONTyped(value?: DailyForecast | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'date': ((value['date']).toISOString()),
        'projected_revenue': value['projectedRevenue'],
        'projected_expenses': value['projectedExpenses'],
        'projected_balance': value['projectedBalance'],
    };
}

