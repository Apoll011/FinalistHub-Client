/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.4.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EventCreate
 */
export interface EventCreate {
    /**
     * 
     * @type {string}
     * @memberof EventCreate
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof EventCreate
     */
    date: string;
    /**
     * 
     * @type {string}
     * @memberof EventCreate
     */
    time: string;
    /**
     * 
     * @type {string}
     * @memberof EventCreate
     */
    location: string;
    /**
     * 
     * @type {string}
     * @memberof EventCreate
     */
    description: string;
}

/**
 * Check if a given object implements the EventCreate interface.
 */
export function instanceOfEventCreate(value: object): value is EventCreate {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('time' in value) || value['time'] === undefined) return false;
    if (!('location' in value) || value['location'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    return true;
}

export function EventCreateFromJSON(json: any): EventCreate {
    return EventCreateFromJSONTyped(json, false);
}

export function EventCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'date': json['date'],
        'time': json['time'],
        'location': json['location'],
        'description': json['description'],
    };
}

export function EventCreateToJSON(json: any): EventCreate {
    return EventCreateToJSONTyped(json, false);
}

export function EventCreateToJSONTyped(value?: EventCreate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'date': value['date'],
        'time': value['time'],
        'location': value['location'],
        'description': value['description'],
    };
}

