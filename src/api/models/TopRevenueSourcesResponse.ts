/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RevenueSourceResponse } from './RevenueSourceResponse';
import {
    RevenueSourceResponseFromJSON,
    RevenueSourceResponseFromJSONTyped,
    RevenueSourceResponseToJSON,
    RevenueSourceResponseToJSONTyped,
} from './RevenueSourceResponse';

/**
 * 
 * @export
 * @interface TopRevenueSourcesResponse
 */
export interface TopRevenueSourcesResponse {
    /**
     * 
     * @type {Array<RevenueSourceResponse>}
     * @memberof TopRevenueSourcesResponse
     */
    sources: Array<RevenueSourceResponse>;
}

/**
 * Check if a given object implements the TopRevenueSourcesResponse interface.
 */
export function instanceOfTopRevenueSourcesResponse(value: object): value is TopRevenueSourcesResponse {
    if (!('sources' in value) || value['sources'] === undefined) return false;
    return true;
}

export function TopRevenueSourcesResponseFromJSON(json: any): TopRevenueSourcesResponse {
    return TopRevenueSourcesResponseFromJSONTyped(json, false);
}

export function TopRevenueSourcesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TopRevenueSourcesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'sources': ((json['sources'] as Array<any>).map(RevenueSourceResponseFromJSON)),
    };
}

export function TopRevenueSourcesResponseToJSON(json: any): TopRevenueSourcesResponse {
    return TopRevenueSourcesResponseToJSONTyped(json, false);
}

export function TopRevenueSourcesResponseToJSONTyped(value?: TopRevenueSourcesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'sources': ((value['sources'] as Array<any>).map(RevenueSourceResponseToJSON)),
    };
}

