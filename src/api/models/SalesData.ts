/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SaleItem } from './SaleItem';
import {
    SaleItemFromJSON,
    SaleItemFromJSONTyped,
    SaleItemToJSON,
    SaleItemToJSONTyped,
} from './SaleItem';
import type { TicketSaleDetail } from './TicketSaleDetail';
import {
    TicketSaleDetailFromJSON,
    TicketSaleDetailFromJSONTyped,
    TicketSaleDetailToJSON,
    TicketSaleDetailToJSONTyped,
} from './TicketSaleDetail';

/**
 * 
 * @export
 * @interface SalesData
 */
export interface SalesData {
    /**
     * 
     * @type {number}
     * @memberof SalesData
     */
    totalRevenue: number;
    /**
     * 
     * @type {Array<TicketSaleDetail>}
     * @memberof SalesData
     */
    ticketsSold: Array<TicketSaleDetail>;
    /**
     * 
     * @type {Array<SaleItem>}
     * @memberof SalesData
     */
    itemsSold: Array<SaleItem>;
}

/**
 * Check if a given object implements the SalesData interface.
 */
export function instanceOfSalesData(value: object): value is SalesData {
    if (!('totalRevenue' in value) || value['totalRevenue'] === undefined) return false;
    if (!('ticketsSold' in value) || value['ticketsSold'] === undefined) return false;
    if (!('itemsSold' in value) || value['itemsSold'] === undefined) return false;
    return true;
}

export function SalesDataFromJSON(json: any): SalesData {
    return SalesDataFromJSONTyped(json, false);
}

export function SalesDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesData {
    if (json == null) {
        return json;
    }
    return {
        
        'totalRevenue': json['total_revenue'],
        'ticketsSold': ((json['tickets_sold'] as Array<any>).map(TicketSaleDetailFromJSON)),
        'itemsSold': ((json['items_sold'] as Array<any>).map(SaleItemFromJSON)),
    };
}

export function SalesDataToJSON(json: any): SalesData {
    return SalesDataToJSONTyped(json, false);
}

export function SalesDataToJSONTyped(value?: SalesData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'total_revenue': value['totalRevenue'],
        'tickets_sold': ((value['ticketsSold'] as Array<any>).map(TicketSaleDetailToJSON)),
        'items_sold': ((value['itemsSold'] as Array<any>).map(SaleItemToJSON)),
    };
}

