/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.4.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DateRange } from './DateRange';
import {
    DateRangeFromJSON,
    DateRangeFromJSONTyped,
    DateRangeToJSON,
    DateRangeToJSONTyped,
} from './DateRange';

/**
 * 
 * @export
 * @interface EventStatisticsResponse
 */
export interface EventStatisticsResponse {
    /**
     * 
     * @type {number}
     * @memberof EventStatisticsResponse
     */
    totalEvents: number;
    /**
     * 
     * @type {number}
     * @memberof EventStatisticsResponse
     */
    activeEvents: number;
    /**
     * 
     * @type {number}
     * @memberof EventStatisticsResponse
     */
    closedEvents: number;
    /**
     * 
     * @type {number}
     * @memberof EventStatisticsResponse
     */
    cancelledEvents: number;
    /**
     * 
     * @type {number}
     * @memberof EventStatisticsResponse
     */
    totalRevenue: number;
    /**
     * 
     * @type {DateRange}
     * @memberof EventStatisticsResponse
     */
    dateRange: DateRange;
}

/**
 * Check if a given object implements the EventStatisticsResponse interface.
 */
export function instanceOfEventStatisticsResponse(value: object): value is EventStatisticsResponse {
    if (!('totalEvents' in value) || value['totalEvents'] === undefined) return false;
    if (!('activeEvents' in value) || value['activeEvents'] === undefined) return false;
    if (!('closedEvents' in value) || value['closedEvents'] === undefined) return false;
    if (!('cancelledEvents' in value) || value['cancelledEvents'] === undefined) return false;
    if (!('totalRevenue' in value) || value['totalRevenue'] === undefined) return false;
    if (!('dateRange' in value) || value['dateRange'] === undefined) return false;
    return true;
}

export function EventStatisticsResponseFromJSON(json: any): EventStatisticsResponse {
    return EventStatisticsResponseFromJSONTyped(json, false);
}

export function EventStatisticsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventStatisticsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'totalEvents': json['total_events'],
        'activeEvents': json['active_events'],
        'closedEvents': json['closed_events'],
        'cancelledEvents': json['cancelled_events'],
        'totalRevenue': json['total_revenue'],
        'dateRange': DateRangeFromJSON(json['date_range']),
    };
}

export function EventStatisticsResponseToJSON(json: any): EventStatisticsResponse {
    return EventStatisticsResponseToJSONTyped(json, false);
}

export function EventStatisticsResponseToJSONTyped(value?: EventStatisticsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'total_events': value['totalEvents'],
        'active_events': value['activeEvents'],
        'closed_events': value['closedEvents'],
        'cancelled_events': value['cancelledEvents'],
        'total_revenue': value['totalRevenue'],
        'date_range': DateRangeToJSON(value['dateRange']),
    };
}

