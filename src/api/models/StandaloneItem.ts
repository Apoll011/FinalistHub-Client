/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.4.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ItemStatus } from './ItemStatus';
import {
    ItemStatusFromJSON,
    ItemStatusFromJSONTyped,
    ItemStatusToJSON,
    ItemStatusToJSONTyped,
} from './ItemStatus';

/**
 * 
 * @export
 * @interface StandaloneItem
 */
export interface StandaloneItem {
    /**
     * 
     * @type {string}
     * @memberof StandaloneItem
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof StandaloneItem
     */
    description?: string | null;
    /**
     * 
     * @type {number}
     * @memberof StandaloneItem
     */
    price: number;
    /**
     * 
     * @type {number}
     * @memberof StandaloneItem
     */
    quantity: number;
    /**
     * 
     * @type {string}
     * @memberof StandaloneItem
     */
    id: string;
    /**
     * 
     * @type {ItemStatus}
     * @memberof StandaloneItem
     */
    status: ItemStatus;
    /**
     * 
     * @type {Date}
     * @memberof StandaloneItem
     */
    closedAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof StandaloneItem
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof StandaloneItem
     */
    updatedAt: Date;
}



/**
 * Check if a given object implements the StandaloneItem interface.
 */
export function instanceOfStandaloneItem(value: object): value is StandaloneItem {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('quantity' in value) || value['quantity'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function StandaloneItemFromJSON(json: any): StandaloneItem {
    return StandaloneItemFromJSONTyped(json, false);
}

export function StandaloneItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): StandaloneItem {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'price': json['price'],
        'quantity': json['quantity'],
        'id': json['id'],
        'status': ItemStatusFromJSON(json['status']),
        'closedAt': json['closed_at'] == null ? undefined : (new Date(json['closed_at'])),
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function StandaloneItemToJSON(json: any): StandaloneItem {
    return StandaloneItemToJSONTyped(json, false);
}

export function StandaloneItemToJSONTyped(value?: StandaloneItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'price': value['price'],
        'quantity': value['quantity'],
        'id': value['id'],
        'status': ItemStatusToJSON(value['status']),
        'closed_at': value['closedAt'] == null ? undefined : ((value['closedAt'] as any).toISOString()),
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}

