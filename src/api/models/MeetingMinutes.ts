/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.4.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MeetingMinutes
 */
export interface MeetingMinutes {
    /**
     * 
     * @type {string}
     * @memberof MeetingMinutes
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingMinutes
     */
    meetingId: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingMinutes
     */
    fileName: string;
    /**
     * 
     * @type {number}
     * @memberof MeetingMinutes
     */
    fileSize: number;
    /**
     * 
     * @type {Date}
     * @memberof MeetingMinutes
     */
    uploadedAt: Date;
}

/**
 * Check if a given object implements the MeetingMinutes interface.
 */
export function instanceOfMeetingMinutes(value: object): value is MeetingMinutes {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('meetingId' in value) || value['meetingId'] === undefined) return false;
    if (!('fileName' in value) || value['fileName'] === undefined) return false;
    if (!('fileSize' in value) || value['fileSize'] === undefined) return false;
    if (!('uploadedAt' in value) || value['uploadedAt'] === undefined) return false;
    return true;
}

export function MeetingMinutesFromJSON(json: any): MeetingMinutes {
    return MeetingMinutesFromJSONTyped(json, false);
}

export function MeetingMinutesFromJSONTyped(json: any, ignoreDiscriminator: boolean): MeetingMinutes {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'meetingId': json['meeting_id'],
        'fileName': json['file_name'],
        'fileSize': json['file_size'],
        'uploadedAt': (new Date(json['uploaded_at'])),
    };
}

export function MeetingMinutesToJSON(json: any): MeetingMinutes {
    return MeetingMinutesToJSONTyped(json, false);
}

export function MeetingMinutesToJSONTyped(value?: MeetingMinutes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'meeting_id': value['meetingId'],
        'file_name': value['fileName'],
        'file_size': value['fileSize'],
        'uploaded_at': ((value['uploadedAt']).toISOString()),
    };
}

