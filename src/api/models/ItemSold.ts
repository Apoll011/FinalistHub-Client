/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ItemSold
 */
export interface ItemSold {
    /**
     * 
     * @type {string}
     * @memberof ItemSold
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof ItemSold
     */
    quantity: number;
    /**
     * 
     * @type {number}
     * @memberof ItemSold
     */
    unitPrice: number;
    /**
     * 
     * @type {number}
     * @memberof ItemSold
     */
    totalPrice: number;
}

/**
 * Check if a given object implements the ItemSold interface.
 */
export function instanceOfItemSold(value: object): value is ItemSold {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('quantity' in value) || value['quantity'] === undefined) return false;
    if (!('unitPrice' in value) || value['unitPrice'] === undefined) return false;
    if (!('totalPrice' in value) || value['totalPrice'] === undefined) return false;
    return true;
}

export function ItemSoldFromJSON(json: any): ItemSold {
    return ItemSoldFromJSONTyped(json, false);
}

export function ItemSoldFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemSold {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'quantity': json['quantity'],
        'unitPrice': json['unit_price'],
        'totalPrice': json['total_price'],
    };
}

export function ItemSoldToJSON(json: any): ItemSold {
    return ItemSoldToJSONTyped(json, false);
}

export function ItemSoldToJSONTyped(value?: ItemSold | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'quantity': value['quantity'],
        'unit_price': value['unitPrice'],
        'total_price': value['totalPrice'],
    };
}

