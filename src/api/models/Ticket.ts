/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Ticket
 */
export interface Ticket {
    /**
     * 
     * @type {string}
     * @memberof Ticket
     */
    type: string;
    /**
     * 
     * @type {number}
     * @memberof Ticket
     */
    price: number;
    /**
     * 
     * @type {string}
     * @memberof Ticket
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Ticket
     */
    eventId: string;
    /**
     * 
     * @type {boolean}
     * @memberof Ticket
     */
    available: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Ticket
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the Ticket interface.
 */
export function instanceOfTicket(value: object): value is Ticket {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('eventId' in value) || value['eventId'] === undefined) return false;
    if (!('available' in value) || value['available'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function TicketFromJSON(json: any): Ticket {
    return TicketFromJSONTyped(json, false);
}

export function TicketFromJSONTyped(json: any, ignoreDiscriminator: boolean): Ticket {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'price': json['price'],
        'id': json['id'],
        'eventId': json['event_id'],
        'available': json['available'],
        'createdAt': (new Date(json['created_at'])),
    };
}

export function TicketToJSON(json: any): Ticket {
    return TicketToJSONTyped(json, false);
}

export function TicketToJSONTyped(value?: Ticket | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'price': value['price'],
        'id': value['id'],
        'event_id': value['eventId'],
        'available': value['available'],
        'created_at': ((value['createdAt']).toISOString()),
    };
}

