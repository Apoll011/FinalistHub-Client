/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.4.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EventStatus } from './EventStatus';
import {
    EventStatusFromJSON,
    EventStatusFromJSONTyped,
    EventStatusToJSON,
    EventStatusToJSONTyped,
} from './EventStatus';

/**
 * 
 * @export
 * @interface CancelEventResponse
 */
export interface CancelEventResponse {
    /**
     * 
     * @type {string}
     * @memberof CancelEventResponse
     */
    id: string;
    /**
     * 
     * @type {EventStatus}
     * @memberof CancelEventResponse
     */
    status: EventStatus;
    /**
     * 
     * @type {Date}
     * @memberof CancelEventResponse
     */
    cancelledAt: Date;
}



/**
 * Check if a given object implements the CancelEventResponse interface.
 */
export function instanceOfCancelEventResponse(value: object): value is CancelEventResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('cancelledAt' in value) || value['cancelledAt'] === undefined) return false;
    return true;
}

export function CancelEventResponseFromJSON(json: any): CancelEventResponse {
    return CancelEventResponseFromJSONTyped(json, false);
}

export function CancelEventResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CancelEventResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'status': EventStatusFromJSON(json['status']),
        'cancelledAt': (new Date(json['cancelledAt'])),
    };
}

export function CancelEventResponseToJSON(json: any): CancelEventResponse {
    return CancelEventResponseToJSONTyped(json, false);
}

export function CancelEventResponseToJSONTyped(value?: CancelEventResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'status': EventStatusToJSON(value['status']),
        'cancelledAt': ((value['cancelledAt']).toISOString()),
    };
}

