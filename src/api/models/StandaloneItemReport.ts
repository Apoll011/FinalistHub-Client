/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.4.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ItemStatus } from './ItemStatus';
import {
    ItemStatusFromJSON,
    ItemStatusFromJSONTyped,
    ItemStatusToJSON,
    ItemStatusToJSONTyped,
} from './ItemStatus';
import type { SalesSummary } from './SalesSummary';
import {
    SalesSummaryFromJSON,
    SalesSummaryFromJSONTyped,
    SalesSummaryToJSON,
    SalesSummaryToJSONTyped,
} from './SalesSummary';

/**
 * 
 * @export
 * @interface StandaloneItemReport
 */
export interface StandaloneItemReport {
    /**
     * 
     * @type {string}
     * @memberof StandaloneItemReport
     */
    itemId: string;
    /**
     * 
     * @type {string}
     * @memberof StandaloneItemReport
     */
    name: string;
    /**
     * 
     * @type {ItemStatus}
     * @memberof StandaloneItemReport
     */
    status: ItemStatus;
    /**
     * 
     * @type {number}
     * @memberof StandaloneItemReport
     */
    currentQuantity: number;
    /**
     * 
     * @type {number}
     * @memberof StandaloneItemReport
     */
    price: number;
    /**
     * 
     * @type {SalesSummary}
     * @memberof StandaloneItemReport
     */
    salesSummary: SalesSummary;
}



/**
 * Check if a given object implements the StandaloneItemReport interface.
 */
export function instanceOfStandaloneItemReport(value: object): value is StandaloneItemReport {
    if (!('itemId' in value) || value['itemId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('currentQuantity' in value) || value['currentQuantity'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('salesSummary' in value) || value['salesSummary'] === undefined) return false;
    return true;
}

export function StandaloneItemReportFromJSON(json: any): StandaloneItemReport {
    return StandaloneItemReportFromJSONTyped(json, false);
}

export function StandaloneItemReportFromJSONTyped(json: any, ignoreDiscriminator: boolean): StandaloneItemReport {
    if (json == null) {
        return json;
    }
    return {
        
        'itemId': json['item_id'],
        'name': json['name'],
        'status': ItemStatusFromJSON(json['status']),
        'currentQuantity': json['current_quantity'],
        'price': json['price'],
        'salesSummary': SalesSummaryFromJSON(json['sales_summary']),
    };
}

export function StandaloneItemReportToJSON(json: any): StandaloneItemReport {
    return StandaloneItemReportToJSONTyped(json, false);
}

export function StandaloneItemReportToJSONTyped(value?: StandaloneItemReport | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'item_id': value['itemId'],
        'name': value['name'],
        'status': ItemStatusToJSON(value['status']),
        'current_quantity': value['currentQuantity'],
        'price': value['price'],
        'sales_summary': SalesSummaryToJSON(value['salesSummary']),
    };
}

