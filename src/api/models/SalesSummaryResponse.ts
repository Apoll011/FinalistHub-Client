/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ItemSold } from './ItemSold';
import {
    ItemSoldFromJSON,
    ItemSoldFromJSONTyped,
    ItemSoldToJSON,
    ItemSoldToJSONTyped,
} from './ItemSold';

/**
 * 
 * @export
 * @interface SalesSummaryResponse
 */
export interface SalesSummaryResponse {
    /**
     * 
     * @type {string}
     * @memberof SalesSummaryResponse
     */
    eventId: string;
    /**
     * 
     * @type {number}
     * @memberof SalesSummaryResponse
     */
    totalSales: number;
    /**
     * 
     * @type {Array<ItemSold>}
     * @memberof SalesSummaryResponse
     */
    itemsSold: Array<ItemSold>;
    /**
     * 
     * @type {Date}
     * @memberof SalesSummaryResponse
     */
    timestamp: Date;
}

/**
 * Check if a given object implements the SalesSummaryResponse interface.
 */
export function instanceOfSalesSummaryResponse(value: object): value is SalesSummaryResponse {
    if (!('eventId' in value) || value['eventId'] === undefined) return false;
    if (!('totalSales' in value) || value['totalSales'] === undefined) return false;
    if (!('itemsSold' in value) || value['itemsSold'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    return true;
}

export function SalesSummaryResponseFromJSON(json: any): SalesSummaryResponse {
    return SalesSummaryResponseFromJSONTyped(json, false);
}

export function SalesSummaryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesSummaryResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'eventId': json['event_id'],
        'totalSales': json['total_sales'],
        'itemsSold': ((json['items_sold'] as Array<any>).map(ItemSoldFromJSON)),
        'timestamp': (new Date(json['timestamp'])),
    };
}

export function SalesSummaryResponseToJSON(json: any): SalesSummaryResponse {
    return SalesSummaryResponseToJSONTyped(json, false);
}

export function SalesSummaryResponseToJSONTyped(value?: SalesSummaryResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'event_id': value['eventId'],
        'total_sales': value['totalSales'],
        'items_sold': ((value['itemsSold'] as Array<any>).map(ItemSoldToJSON)),
        'timestamp': ((value['timestamp']).toISOString()),
    };
}

