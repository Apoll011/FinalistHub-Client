/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.4.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CategorySpending
 */
export interface CategorySpending {
    /**
     * 
     * @type {string}
     * @memberof CategorySpending
     */
    category: string;
    /**
     * 
     * @type {number}
     * @memberof CategorySpending
     */
    totalAmount: number;
    /**
     * 
     * @type {number}
     * @memberof CategorySpending
     */
    averageAmount: number;
    /**
     * 
     * @type {number}
     * @memberof CategorySpending
     */
    transactionCount: number;
    /**
     * 
     * @type {number}
     * @memberof CategorySpending
     */
    percentageOfTotal: number;
}

/**
 * Check if a given object implements the CategorySpending interface.
 */
export function instanceOfCategorySpending(value: object): value is CategorySpending {
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('totalAmount' in value) || value['totalAmount'] === undefined) return false;
    if (!('averageAmount' in value) || value['averageAmount'] === undefined) return false;
    if (!('transactionCount' in value) || value['transactionCount'] === undefined) return false;
    if (!('percentageOfTotal' in value) || value['percentageOfTotal'] === undefined) return false;
    return true;
}

export function CategorySpendingFromJSON(json: any): CategorySpending {
    return CategorySpendingFromJSONTyped(json, false);
}

export function CategorySpendingFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategorySpending {
    if (json == null) {
        return json;
    }
    return {
        
        'category': json['category'],
        'totalAmount': json['total_amount'],
        'averageAmount': json['average_amount'],
        'transactionCount': json['transaction_count'],
        'percentageOfTotal': json['percentage_of_total'],
    };
}

export function CategorySpendingToJSON(json: any): CategorySpending {
    return CategorySpendingToJSONTyped(json, false);
}

export function CategorySpendingToJSONTyped(value?: CategorySpending | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'category': value['category'],
        'total_amount': value['totalAmount'],
        'average_amount': value['averageAmount'],
        'transaction_count': value['transactionCount'],
        'percentage_of_total': value['percentageOfTotal'],
    };
}

