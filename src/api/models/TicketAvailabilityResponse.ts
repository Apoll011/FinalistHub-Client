/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TicketAvailability } from './TicketAvailability';
import {
    TicketAvailabilityFromJSON,
    TicketAvailabilityFromJSONTyped,
    TicketAvailabilityToJSON,
    TicketAvailabilityToJSONTyped,
} from './TicketAvailability';

/**
 * 
 * @export
 * @interface TicketAvailabilityResponse
 */
export interface TicketAvailabilityResponse {
    /**
     * 
     * @type {Array<TicketAvailability>}
     * @memberof TicketAvailabilityResponse
     */
    tickets: Array<TicketAvailability>;
}

/**
 * Check if a given object implements the TicketAvailabilityResponse interface.
 */
export function instanceOfTicketAvailabilityResponse(value: object): value is TicketAvailabilityResponse {
    if (!('tickets' in value) || value['tickets'] === undefined) return false;
    return true;
}

export function TicketAvailabilityResponseFromJSON(json: any): TicketAvailabilityResponse {
    return TicketAvailabilityResponseFromJSONTyped(json, false);
}

export function TicketAvailabilityResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TicketAvailabilityResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'tickets': ((json['tickets'] as Array<any>).map(TicketAvailabilityFromJSON)),
    };
}

export function TicketAvailabilityResponseToJSON(json: any): TicketAvailabilityResponse {
    return TicketAvailabilityResponseToJSONTyped(json, false);
}

export function TicketAvailabilityResponseToJSONTyped(value?: TicketAvailabilityResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tickets': ((value['tickets'] as Array<any>).map(TicketAvailabilityToJSON)),
    };
}

