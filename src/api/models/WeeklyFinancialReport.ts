/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.4.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransactionResponse } from './TransactionResponse';
import {
    TransactionResponseFromJSON,
    TransactionResponseFromJSONTyped,
    TransactionResponseToJSON,
    TransactionResponseToJSONTyped,
} from './TransactionResponse';

/**
 * 
 * @export
 * @interface WeeklyFinancialReport
 */
export interface WeeklyFinancialReport {
    /**
     * 
     * @type {string}
     * @memberof WeeklyFinancialReport
     */
    weekStart: string;
    /**
     * 
     * @type {string}
     * @memberof WeeklyFinancialReport
     */
    weekEnd: string;
    /**
     * 
     * @type {number}
     * @memberof WeeklyFinancialReport
     */
    totalRevenue: number;
    /**
     * 
     * @type {number}
     * @memberof WeeklyFinancialReport
     */
    totalExpenses: number;
    /**
     * 
     * @type {number}
     * @memberof WeeklyFinancialReport
     */
    netIncome: number;
    /**
     * 
     * @type {Array<TransactionResponse>}
     * @memberof WeeklyFinancialReport
     */
    transactions: Array<TransactionResponse>;
}

/**
 * Check if a given object implements the WeeklyFinancialReport interface.
 */
export function instanceOfWeeklyFinancialReport(value: object): value is WeeklyFinancialReport {
    if (!('weekStart' in value) || value['weekStart'] === undefined) return false;
    if (!('weekEnd' in value) || value['weekEnd'] === undefined) return false;
    if (!('totalRevenue' in value) || value['totalRevenue'] === undefined) return false;
    if (!('totalExpenses' in value) || value['totalExpenses'] === undefined) return false;
    if (!('netIncome' in value) || value['netIncome'] === undefined) return false;
    if (!('transactions' in value) || value['transactions'] === undefined) return false;
    return true;
}

export function WeeklyFinancialReportFromJSON(json: any): WeeklyFinancialReport {
    return WeeklyFinancialReportFromJSONTyped(json, false);
}

export function WeeklyFinancialReportFromJSONTyped(json: any, ignoreDiscriminator: boolean): WeeklyFinancialReport {
    if (json == null) {
        return json;
    }
    return {
        
        'weekStart': json['week_start'],
        'weekEnd': json['week_end'],
        'totalRevenue': json['total_revenue'],
        'totalExpenses': json['total_expenses'],
        'netIncome': json['net_income'],
        'transactions': ((json['transactions'] as Array<any>).map(TransactionResponseFromJSON)),
    };
}

export function WeeklyFinancialReportToJSON(json: any): WeeklyFinancialReport {
    return WeeklyFinancialReportToJSONTyped(json, false);
}

export function WeeklyFinancialReportToJSONTyped(value?: WeeklyFinancialReport | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'week_start': value['weekStart'],
        'week_end': value['weekEnd'],
        'total_revenue': value['totalRevenue'],
        'total_expenses': value['totalExpenses'],
        'net_income': value['netIncome'],
        'transactions': ((value['transactions'] as Array<any>).map(TransactionResponseToJSON)),
    };
}

