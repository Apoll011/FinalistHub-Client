/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.4.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RevenueSource
 */
export interface RevenueSource {
    /**
     * 
     * @type {string}
     * @memberof RevenueSource
     */
    category: string;
    /**
     * 
     * @type {number}
     * @memberof RevenueSource
     */
    totalAmount: number;
    /**
     * 
     * @type {number}
     * @memberof RevenueSource
     */
    transactionCount: number;
}

/**
 * Check if a given object implements the RevenueSource interface.
 */
export function instanceOfRevenueSource(value: object): value is RevenueSource {
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('totalAmount' in value) || value['totalAmount'] === undefined) return false;
    if (!('transactionCount' in value) || value['transactionCount'] === undefined) return false;
    return true;
}

export function RevenueSourceFromJSON(json: any): RevenueSource {
    return RevenueSourceFromJSONTyped(json, false);
}

export function RevenueSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): RevenueSource {
    if (json == null) {
        return json;
    }
    return {
        
        'category': json['category'],
        'totalAmount': json['total_amount'],
        'transactionCount': json['transaction_count'],
    };
}

export function RevenueSourceToJSON(json: any): RevenueSource {
    return RevenueSourceToJSONTyped(json, false);
}

export function RevenueSourceToJSONTyped(value?: RevenueSource | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'category': value['category'],
        'total_amount': value['totalAmount'],
        'transaction_count': value['transactionCount'],
    };
}

