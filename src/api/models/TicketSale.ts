/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TicketSale
 */
export interface TicketSale {
    /**
     * 
     * @type {string}
     * @memberof TicketSale
     */
    ticketId: string;
    /**
     * 
     * @type {number}
     * @memberof TicketSale
     */
    quantity: number;
    /**
     * 
     * @type {string}
     * @memberof TicketSale
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof TicketSale
     */
    totalAmount: number;
    /**
     * 
     * @type {Date}
     * @memberof TicketSale
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof TicketSale
     */
    ticketType: string;
    /**
     * 
     * @type {string}
     * @memberof TicketSale
     */
    eventName: string;
}

/**
 * Check if a given object implements the TicketSale interface.
 */
export function instanceOfTicketSale(value: object): value is TicketSale {
    if (!('ticketId' in value) || value['ticketId'] === undefined) return false;
    if (!('quantity' in value) || value['quantity'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('totalAmount' in value) || value['totalAmount'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('ticketType' in value) || value['ticketType'] === undefined) return false;
    if (!('eventName' in value) || value['eventName'] === undefined) return false;
    return true;
}

export function TicketSaleFromJSON(json: any): TicketSale {
    return TicketSaleFromJSONTyped(json, false);
}

export function TicketSaleFromJSONTyped(json: any, ignoreDiscriminator: boolean): TicketSale {
    if (json == null) {
        return json;
    }
    return {
        
        'ticketId': json['ticket_id'],
        'quantity': json['quantity'],
        'id': json['id'],
        'totalAmount': json['total_amount'],
        'createdAt': (new Date(json['created_at'])),
        'ticketType': json['ticket_type'],
        'eventName': json['event_name'],
    };
}

export function TicketSaleToJSON(json: any): TicketSale {
    return TicketSaleToJSONTyped(json, false);
}

export function TicketSaleToJSONTyped(value?: TicketSale | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ticket_id': value['ticketId'],
        'quantity': value['quantity'],
        'id': value['id'],
        'total_amount': value['totalAmount'],
        'created_at': ((value['createdAt']).toISOString()),
        'ticket_type': value['ticketType'],
        'event_name': value['eventName'],
    };
}

