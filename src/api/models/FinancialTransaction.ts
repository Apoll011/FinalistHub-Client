/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransactionType } from './TransactionType';
import {
    TransactionTypeFromJSON,
    TransactionTypeFromJSONTyped,
    TransactionTypeToJSON,
    TransactionTypeToJSONTyped,
} from './TransactionType';

/**
 * 
 * @export
 * @interface FinancialTransaction
 */
export interface FinancialTransaction {
    /**
     * 
     * @type {string}
     * @memberof FinancialTransaction
     */
    description: string;
    /**
     * 
     * @type {number}
     * @memberof FinancialTransaction
     */
    amount: number;
    /**
     * 
     * @type {string}
     * @memberof FinancialTransaction
     */
    id: string;
    /**
     * 
     * @type {TransactionType}
     * @memberof FinancialTransaction
     */
    type: TransactionType;
    /**
     * 
     * @type {Date}
     * @memberof FinancialTransaction
     */
    timestamp: Date;
}



/**
 * Check if a given object implements the FinancialTransaction interface.
 */
export function instanceOfFinancialTransaction(value: object): value is FinancialTransaction {
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    return true;
}

export function FinancialTransactionFromJSON(json: any): FinancialTransaction {
    return FinancialTransactionFromJSONTyped(json, false);
}

export function FinancialTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): FinancialTransaction {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'],
        'amount': json['amount'],
        'id': json['id'],
        'type': TransactionTypeFromJSON(json['type']),
        'timestamp': (new Date(json['timestamp'])),
    };
}

export function FinancialTransactionToJSON(json: any): FinancialTransaction {
    return FinancialTransactionToJSONTyped(json, false);
}

export function FinancialTransactionToJSONTyped(value?: FinancialTransaction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'description': value['description'],
        'amount': value['amount'],
        'id': value['id'],
        'type': TransactionTypeToJSON(value['type']),
        'timestamp': ((value['timestamp']).toISOString()),
    };
}

