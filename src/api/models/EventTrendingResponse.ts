/* tslint:disable */
/* eslint-disable */
/**
 * Events Management API
 * This API provides comprehensive management of events, including detailed analytics, revenue tracking, rescheduling, cancellations, and insights into capacity and sales performance.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TrendingEvent } from './TrendingEvent';
import {
    TrendingEventFromJSON,
    TrendingEventFromJSONTyped,
    TrendingEventToJSON,
    TrendingEventToJSONTyped,
} from './TrendingEvent';

/**
 * 
 * @export
 * @interface EventTrendingResponse
 */
export interface EventTrendingResponse {
    /**
     * 
     * @type {Array<TrendingEvent>}
     * @memberof EventTrendingResponse
     */
    trendingEvents: Array<TrendingEvent>;
}

/**
 * Check if a given object implements the EventTrendingResponse interface.
 */
export function instanceOfEventTrendingResponse(value: object): value is EventTrendingResponse {
    if (!('trendingEvents' in value) || value['trendingEvents'] === undefined) return false;
    return true;
}

export function EventTrendingResponseFromJSON(json: any): EventTrendingResponse {
    return EventTrendingResponseFromJSONTyped(json, false);
}

export function EventTrendingResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventTrendingResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'trendingEvents': ((json['trending_events'] as Array<any>).map(TrendingEventFromJSON)),
    };
}

export function EventTrendingResponseToJSON(json: any): EventTrendingResponse {
    return EventTrendingResponseToJSONTyped(json, false);
}

export function EventTrendingResponseToJSONTyped(value?: EventTrendingResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'trending_events': ((value['trendingEvents'] as Array<any>).map(TrendingEventToJSON)),
    };
}

